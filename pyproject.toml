[tool.poetry]
name = "cna_mixture"
version = "0.1.0"
description = ""
readme = "README.md"
authors = ["M. J. Wilson <mjwilson@princeton.edu>"]
packages = [
    { include = "cna_mixture", from = "python" },
]

[tool.poetry.dependencies]
python = "3.12.2"
numpy = "^1.26.0"
maturin = "^1.1.0"
matplotlib = "*"
scipy = "*"
scikit-learn = "*"
pytest = "^8.3.5"
ruff = "^0.9.9"

[tool.poetry.scripts]
run_model = 'cna_mixture.scripts.run_model:main'

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["-ra -q", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = false
filterwarnings = ["error"]
testpaths = [
    "tests",
]

[tool.ruff]
ignore = [
  "G004", # f-string in logger
  "T201", # print statements
  "PLR2004", # magic value in assert
  "NPY002", # legacy numpy calls
  "ANN",  # Ignore all type annotation rules
  "I002",  # Ignore the rule that requires `from __future__ import annotations`
]

[tool.ruff.lint]
extend-select = [
  "B",           # flake8-bugbear
  "I",           # isort
  "ARG",         # flake8-unused-arguments
  "C4",          # flake8-comprehensions
  "EM",          # flake8-errmsg
  "ICN",         # flake8-import-conventions
  "ISC",         # flake8-implicit-str-concat
  "G",           # flake8-logging-format
  "PGH",         # pygrep-hooks
  "PIE",         # flake8-pie
  "PL",          # pylint
  "PT",          # flake8-pytest-style
  "PTH",         # flake8-use-pathlib
  "RET",         # flake8-return
  "RUF",         # Ruff-specific
  "SIM",         # flake8-simplify
  "T20",         # flake8-print
  "UP",          # pyupgrade
  "YTT",         # flake8-2020
  "EXE",         # flake8-executable
  "NPY",         # NumPy specific rules
  "PD",          # pandas-vet
]
extend-ignore = [
  "PLR09",    # Too many <...>
  "ISC001",   # Conflicts with formatter
]
unfixable = [
  "T20",  # Removes print statements
  "F841", # Removes unused variables
]
isort.required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["T20"]
"python/cna_mixture/sandbox/**" = ["ALL"]